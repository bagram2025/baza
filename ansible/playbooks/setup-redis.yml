---
- name: Install and Configure Redis on Local Server
  hosts: localhost
  connection: local
  become: yes
  
  vars:
    redis_port: 6379
    redis_password: "baza_redis_password_123"
    redis_maxmemory: "256mb"
    project_path: "/home/ubuntuuser/baza"

  tasks:
    - name: Update apt package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install Redis server
      apt:
        name: redis-server
        state: latest

    - name: Install Redis PHP extension
      apt:
        name: php-redis
        state: present

    - name: Install Python Redis client
      pip:
        name: redis
        executable: pip3

    - name: Backup original Redis config
      copy:
        src: /etc/redis/redis.conf
        dest: /etc/redis/redis.conf.backup
        remote_src: yes
        owner: root
        group: root
        mode: '0644'

    - name: Configure Redis to listen on localhost
      lineinfile:
        path: /etc/redis/redis.conf
        regexp: '^bind '
        line: 'bind 127.0.0.1'
        backrefs: yes

    - name: Set Redis password
      lineinfile:
        path: /etc/redis/redis.conf
        regexp: '^# requirepass'
        line: 'requirepass {{ redis_password }}'

    - name: Set max memory
      lineinfile:
        path: /etc/redis/redis.conf
        regexp: '^# maxmemory '
        line: 'maxmemory {{ redis_maxmemory }}'

    - name: Set max memory policy
      lineinfile:
        path: /etc/redis/redis.conf
        regexp: '^# maxmemory-policy '
        line: 'maxmemory-policy allkeys-lru'

    - name: Enable Redis to start on boot
      systemd:
        name: redis-server
        enabled: yes

    - name: Restart Redis service
      systemd:
        name: redis-server
        state: restarted

    - name: Wait for Redis to start
      wait_for:
        port: 6379
        host: 127.0.0.1
        timeout: 10

    - name: Test Redis connection
      shell: |
        redis-cli -a {{ redis_password }} ping
      register: redis_test
      changed_when: false
      failed_when: "'PONG' not in redis_test.stdout"

    - name: Show Redis test result
      debug:
        msg: "{{ redis_test.stdout }}"

    - name: Create Redis test data
      shell: |
        redis-cli -a {{ redis_password }} set "ansible:install:time" "{{ ansible_date_time.iso8601 }}"
        redis-cli -a {{ redis_password }} set "project:baza:status" "active"
        redis-cli -a {{ redis_password }} incr "project:baza:visits"
      changed_when: false

    - name: Create PHP Redis test page
      copy:
        content: |
          <!DOCTYPE html>
          <html>
          <head>
              <title>Redis Test - Baza Project</title>
              <link rel="stylesheet" href="/static/style.css">
          </head>
          <body>
              <div class="container">
                  <div class="header">
                      <h1>üî¥ Redis Test</h1>
                      <p>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Redis –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ</p>
                  </div>
                  <div class="service-card">
                      <h2>Redis Connection Status</h2>
                      <?php
                      try {
                          $redis = new Redis();
                          $redis->connect('127.0.0.1', 6379, 2.5);
                          $redis->auth('{{ redis_password }}');
                          
                          echo '<div style="color: green; font-weight: bold;">‚úÖ Redis –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!</div>';
                          
                          // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                          $info = $redis->info();
                          $install_time = $redis->get('ansible:install:time');
                          $project_status = $redis->get('project:baza:status');
                          $visits = $redis->incr('web:page:visits');
                          
                          echo '<div style="margin: 20px 0;">';
                          echo '<p><strong>–í–µ—Ä—Å–∏—è Redis:</strong> ' . $info['redis_version'] . '</p>';
                          echo '<p><strong>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø–∞–º—è—Ç–∏:</strong> ' . $info['used_memory_human'] . '</p>';
                          echo '<p><strong>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–π:</strong> ' . $info['connected_clients'] . '</p>';
                          echo '<p><strong>–í—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:</strong> ' . ($install_time ?: '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ') . '</p>';
                          echo '<p><strong>–°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:</strong> ' . ($project_status ?: '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω') . '</p>';
                          echo '<p><strong>–ü–æ—Å–µ—â–µ–Ω–∏–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:</strong> ' . $visits . '</p>';
                          echo '</div>';
                          
                          // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
                          echo '<h3>–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã:</h3>';
                          
                          // –°—Ç—Ä–æ–∫–∏
                          $redis->set('demo:string', 'Hello Redis!');
                          echo '<p><strong>String:</strong> ' . $redis->get('demo:string') . '</p>';
                          
                          // –°–ø–∏—Å–∫–∏
                          $redis->lpush('demo:list', 'item1', 'item2', 'item3');
                          $list_items = $redis->lrange('demo:list', 0, -1);
                          echo '<p><strong>List:</strong> ' . implode(', ', $list_items) . '</p>';
                          
                          // –•—ç—à–∏
                          $redis->hset('demo:hash', 'name', 'Baza Project');
                          $redis->hset('demo:hash', 'redis_port', 6379);
                          $hash_data = $redis->hgetall('demo:hash');
                          echo '<p><strong>Hash:</strong> ' . json_encode($hash_data) . '</p>';
                          
                          // –ú–Ω–æ–∂–µ—Å—Ç–≤–∞
                          $redis->sadd('demo:set', 'php', 'python', 'redis', 'nginx');
                          $set_items = $redis->smembers('demo:set');
                          echo '<p><strong>Set:</strong> ' . implode(', ', $set_items) . '</p>';
                          
                      } catch (Exception $e) {
                          echo '<div style="color: red; font-weight: bold;">‚ùå –û—à–∏–±–∫–∞: ' . $e->getMessage() . '</div>';
                          echo '<p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:</p>';
                          <ul>
                          <li>–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ php-redis: <code>sudo apt install php-redis</code></li>
                          <li>–ó–∞–ø—É—â–µ–Ω –ª–∏ Redis: <code>sudo systemctl status redis-server</code></li>
                          <li>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ –ø–∞—Ä–æ–ª—å –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</li>
                          </ul>';
                      }
                      ?>
                      <div style="text-align: center; margin-top: 20px;">
                          <a href="/" class="btn">‚Üê –ù–∞ –≥–ª–∞–≤–Ω—É—é</a>
                      </div>
                  </div>
              </div>
          </body>
          </html>
        dest: "{{ project_path }}/www/redis-test.php"
        owner: ubuntuuser
        group: ubuntuuser
        mode: '0644'

    - name: Create Python Redis test
      copy:
        content: |
          #!/usr/bin/env python3
          import redis
          import json
          
          print("Content-Type: text/html; charset=utf-8\n")
          print("""
          <html>
          <head><title>Redis Python Test</title>
          <link rel="stylesheet" href="/static/style.css">
          </head>
          <body>
          <div class="container">
              <div class="header"><h1>üî¥ Redis Python Test</h1></div>
              <div class="service-card">
          """)
          
          try:
              r = redis.Redis(
                  host='127.0.0.1',
                  port=6379,
                  password='{{ redis_password }}',
                  decode_responses=True
              )
              
              r.ping()
              print("<h2 style='color: green;'>‚úÖ Redis –ø–æ–¥–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ Python!</h2>")
              
              # –¢–µ—Å—Ç–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
              r.set('python:test', 'Hello from Python Redis!')
              test_value = r.get('python:test')
              visits = r.incr('python:visits')
              
              print(f"<p><strong>Python visits:</strong> {visits}</p>")
              print(f"<p><strong>Test value:</strong> {test_value}</p>")
              
              # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ
              info = r.info()
              print(f"<p><strong>Redis version:</strong> {info['redis_version']}</p>")
              print(f"<p><strong>Memory used:</strong> {info['used_memory_human']}</p>")
              
          except Exception as e:
              print(f"<h2 style='color: red;'>‚ùå –û—à–∏–±–∫–∞: {e}</h2>")
          
          print("""
                  <div style="text-align: center; margin-top: 20px;">
                      <a href="/" class="btn">‚Üê –ù–∞ –≥–ª–∞–≤–Ω—É—é</a>
                  </div>
              </div>
          </div>
          </body>
          </html>
          """)
        dest: "{{ project_path }}/www/redis-python-test.py"
        owner: ubuntuuser
        group: ubuntuuser
        mode: '0755'

    - name: Show connection information
      debug:
        msg: |
          Redis —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!
          –ü–æ—Ä—Ç: {{ redis_port }}
          –•–æ—Å—Ç: 127.0.0.1
          –ü–∞—Ä–æ–ª—å: {{ redis_password }}
          
          –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:
          - http://81.94.156.217:8080/redis-test.php
          - http://81.94.156.217:8080/redis-python-test.py
          
          –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:
          - redis-cli -a {{ redis_password }} ping
          - sudo systemctl status redis-server
